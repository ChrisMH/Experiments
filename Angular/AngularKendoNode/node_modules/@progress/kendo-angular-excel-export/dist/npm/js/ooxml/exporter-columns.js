(function(e, a) { for(var i in a) e[i] = a[i]; }(exports, /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(29);


/***/ },

/***/ 29:
/***/ function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	/* tslint:disable align */
	var compileTemplate = function (templateRef, context, updateContext) {
	    var embeddedView = templateRef.createEmbeddedView(context);
	    var result = function (data) {
	        updateContext(context, data);
	        embeddedView.detectChanges();
	        return embeddedView.rootNodes.reduce(function (content, rootNode) {
	            return content + rootNode.textContent;
	        }, '').trim();
	    };
	    result.destroy = function () {
	        embeddedView.destroy();
	    };
	    return result;
	};
	var updateGroupHeaderContext = function (context, data) {
	    context.$implicit = context.group = data;
	    context.field = data.field;
	    context.value = data.value;
	    context.aggregates = data.aggregates;
	};
	var updateGroupFooterContext = function (context, data) {
	    context.group = data.group;
	    context.field = data.group.field;
	    context.$implicit = context.aggregates = data;
	};
	var updateFooterContext = function (_context, _data) { }; /* tslint:disable-line no-empty */
	/**
	 * @hidden
	 */
	exports.toExporterColumns = function (sourceColumns) {
	    var exporterColumns = [];
	    var columnIndex = 0;
	    var addColumns = function (columns, result, level) {
	        columns.forEach(function (column) {
	            if (column.level === level) {
	                var exporterColumn = new ExporterColumn(column, columnIndex);
	                result.push(exporterColumn);
	                if (column.children && column.children.length > 1) {
	                    var children = exporterColumn.columns = [];
	                    addColumns(column.children, children, level + 1);
	                }
	                else {
	                    columnIndex++;
	                }
	            }
	        });
	    };
	    addColumns(sourceColumns, exporterColumns, 0);
	    return exporterColumns;
	};
	/**
	 * @hidden
	 */
	exports.destroyColumns = function (columns) {
	    if (columns) {
	        columns.forEach(function (column) {
	            column.destroy();
	        });
	    }
	};
	/**
	 * @hidden
	 */
	var ExporterColumn = (function () {
	    function ExporterColumn(column, columnIndex) {
	        this.title = column.title;
	        this.field = column.field;
	        this.hidden = column.hidden;
	        this.locked = column.locked;
	        this.width = column.width;
	        this.headerCellOptions = column.headerCellOptions;
	        this.cellOptions = column.cellOptions;
	        this.groupHeaderCellOptions = column.groupHeaderCellOptions;
	        this.groupFooterCellOptions = column.groupFooterCellOptions;
	        this.footerCellOptions = column.footerCellOptions;
	        if (column.footerTemplate) {
	            this.footerTemplate = compileTemplate(column.footerTemplate.templateRef, Object.assign({}, {
	                $implicit: column,
	                column: column,
	                columnIndex: columnIndex
	            }), updateFooterContext);
	        }
	        if (column.groupFooterTemplate) {
	            this.groupFooterTemplate = compileTemplate(column.groupFooterTemplate.templateRef, { column: column }, updateGroupFooterContext);
	        }
	        if (column.groupHeaderTemplate) {
	            this.groupHeaderTemplate = compileTemplate(column.groupHeaderTemplate.templateRef, {}, updateGroupHeaderContext);
	        }
	    }
	    ExporterColumn.prototype.destroy = function () {
	        if (this.footerTemplate) {
	            this.footerTemplate.destroy();
	        }
	        if (this.groupFooterTemplate) {
	            this.groupFooterTemplate.destroy();
	        }
	        if (this.groupHeaderTemplate) {
	            this.groupHeaderTemplate.destroy();
	        }
	        exports.destroyColumns(this.columns);
	    };
	    return ExporterColumn;
	}());
	exports.ExporterColumn = ExporterColumn;


/***/ }

/******/ })));
//# sourceMappingURL=exporter-columns.js.map