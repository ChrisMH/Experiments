(function(e, a) { for(var i in a) e[i] = a[i]; }(exports, /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(13);


/***/ },
/* 1 */,
/* 2 */
/***/ function(module, exports) {

	module.exports = require("@angular/core");

/***/ },
/* 3 */,
/* 4 */,
/* 5 */,
/* 6 */,
/* 7 */,
/* 8 */,
/* 9 */,
/* 10 */,
/* 11 */,
/* 12 */,
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var __metadata = (this && this.__metadata) || function (k, v) {
	    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
	};
	var __param = (this && this.__param) || function (paramIndex, decorator) {
	    return function (target, key) { decorator(target, key, paramIndex); }
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var core_1 = __webpack_require__(2);
	var kendo_file_saver_1 = __webpack_require__(14);
	var kendo_angular_l10n_1 = __webpack_require__(15);
	var workbook_1 = __webpack_require__(16);
	var column_base_1 = __webpack_require__(17);
	/**
	 * Configures the settings for the Excel export of the Kendo UI Grid.
	 */
	var ExcelExportComponent = (function () {
	    function ExcelExportComponent(rtl) {
	        this.rtl = rtl;
	        /**
	         * Specifies the file name of the file exported to Excel.
	         * @default "Export.xlsx"
	         */
	        this.fileName = 'Export.xlsx';
	        /**
	         * @hidden
	         */
	        this.columns = new core_1.QueryList();
	        this.saveFile = this.saveFile.bind(this);
	    }
	    /**
	     * Saves the data to Excel.
	     *
	     * @param exportData - An optional parameter. Can be the data that is to be exported or [`WorkbookOptions`]({% slug api_excel-export_workbookoptions_kendouiforangular %}).
	     */
	    ExcelExportComponent.prototype.save = function (exportData) {
	        this.toDataURL(exportData).then(this.saveFile);
	    };
	    /**
	     * Returns [`WorkbookOptions`]({% slug api_excel-export_workbookoptions_kendouiforangular %}) based on the specified columns and data.
	     *
	     * @param exportData - The optional data to be exported.
	     * @returns {WorkbookOptions} - The workbook options.
	     */
	    ExcelExportComponent.prototype.workbookOptions = function (exportData) {
	        var currentData = this.getExportData(exportData);
	        var options = workbook_1.workbookOptions({
	            columns: this.columns,
	            data: currentData.data,
	            group: currentData.group,
	            filterable: this.filterable,
	            creator: this.creator,
	            date: this.date,
	            rtl: this.rtl,
	            paddingCellOptions: this.paddingCellOptions,
	            headerPaddingCellOptions: this.headerPaddingCellOptions
	        });
	        return options;
	    };
	    /**
	     * Returns a promise which will be resolved with the file data URI.
	     *
	     * @param exportData - The optional data or [`WorkbookOptions`]({% slug api_excel-export_workbookoptions_kendouiforangular %}) that are to be used to generate the data URI.
	     * @returns {Promise<string>} - The promise that will be resolved by the file data URI.
	     */
	    ExcelExportComponent.prototype.toDataURL = function (exportData) {
	        var options = workbook_1.isWorkbookOptions(exportData) ? exportData : this.workbookOptions(exportData);
	        return workbook_1.toDataURL(options);
	    };
	    ExcelExportComponent.prototype.getExportData = function (exportData) {
	        var result;
	        if (exportData) {
	            if (Array.isArray(exportData)) {
	                result = {
	                    data: exportData
	                };
	            }
	            else {
	                result = exportData;
	            }
	        }
	        else {
	            result = {
	                data: this.data,
	                group: this.group
	            };
	        }
	        return result;
	    };
	    ExcelExportComponent.prototype.saveFile = function (dataURL) {
	        kendo_file_saver_1.saveAs(dataURL, this.fileName, {
	            forceProxy: this.forceProxy,
	            proxyURL: this.proxyURL
	        });
	    };
	    return ExcelExportComponent;
	}());
	__decorate([
	    core_1.Input(),
	    __metadata("design:type", String)
	], ExcelExportComponent.prototype, "fileName", void 0);
	__decorate([
	    core_1.Input(),
	    __metadata("design:type", Boolean)
	], ExcelExportComponent.prototype, "filterable", void 0);
	__decorate([
	    core_1.Input(),
	    __metadata("design:type", String)
	], ExcelExportComponent.prototype, "creator", void 0);
	__decorate([
	    core_1.Input(),
	    __metadata("design:type", Date)
	], ExcelExportComponent.prototype, "date", void 0);
	__decorate([
	    core_1.Input(),
	    __metadata("design:type", Boolean)
	], ExcelExportComponent.prototype, "forceProxy", void 0);
	__decorate([
	    core_1.Input(),
	    __metadata("design:type", String)
	], ExcelExportComponent.prototype, "proxyURL", void 0);
	__decorate([
	    core_1.Input(),
	    __metadata("design:type", Array)
	], ExcelExportComponent.prototype, "data", void 0);
	__decorate([
	    core_1.Input(),
	    __metadata("design:type", Array)
	], ExcelExportComponent.prototype, "group", void 0);
	__decorate([
	    core_1.Input(),
	    __metadata("design:type", Object)
	], ExcelExportComponent.prototype, "paddingCellOptions", void 0);
	__decorate([
	    core_1.Input(),
	    __metadata("design:type", Object)
	], ExcelExportComponent.prototype, "headerPaddingCellOptions", void 0);
	__decorate([
	    core_1.ContentChildren(column_base_1.ColumnBase, { descendants: true }),
	    __metadata("design:type", core_1.QueryList)
	], ExcelExportComponent.prototype, "columns", void 0);
	ExcelExportComponent = __decorate([
	    core_1.Component({
	        exportAs: 'kendoExcelExport',
	        selector: 'kendo-excelexport',
	        template: ""
	    }),
	    __param(0, core_1.Optional()), __param(0, core_1.Inject(kendo_angular_l10n_1.RTL)),
	    __metadata("design:paramtypes", [Boolean])
	], ExcelExportComponent);
	exports.ExcelExportComponent = ExcelExportComponent;


/***/ },
/* 14 */
/***/ function(module, exports) {

	module.exports = require("@progress/kendo-file-saver");

/***/ },
/* 15 */
/***/ function(module, exports) {

	module.exports = require("@progress/kendo-angular-l10n");

/***/ },
/* 16 */
/***/ function(module, exports) {

	module.exports = require("./ooxml/workbook");

/***/ },
/* 17 */
/***/ function(module, exports) {

	module.exports = require("./columns/column-base");

/***/ }
/******/ ])));
//# sourceMappingURL=excel-export.component.js.map